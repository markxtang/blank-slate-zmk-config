/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

// Only turn off it the key is held for 5 seconds or longer.
&soft_off {
    hold-time-ms = <5000>; 
};

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout = &layout_ortho_4x12_1x2u;
    };

    macros {
        mcr_deg: mcr_deg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LALT>,
                <&macro_tap &kp KP_N2 &kp KP_N4 &kp KP_N8>,
                <&macro_release &kp LALT>;
        };
    };
    
    tap_dances {
    	TABBY: tab_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_TABBY";
		#binding-cells = <0>;
		tapping-term-ms = <250>;
		bindings = <&kp TAB>, <&caps_word>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp ESC		&kp Q		&kp W		&kp E	    	&kp R	    	&kp T	    	&kp Y		&kp U		&kp I		&kp O		&kp P		&kp BKSP
&TABBY		&kp A	    	&kp S	    	&kp D	    	&kp F	    	&kp G	    	&kp H		&kp J		&kp K		&kp L		&kp SQT		&kp RET
&kp LSHFT 	&kp Z		&kp X	    	&kp C	    	&kp V		&kp B	    	&kp N		&kp M		&kp COMMA	&kp DOT		&kp FSLH	&kp RSHFT
&kp LCTRL	&mo NAV_L   	&kp LGUI    	&kp LALT    	&mo NUM_L   	&kp SPACE			&mo SYM_L	&kp LEFT	&kp DOWN	&kp UP		&kp RIGHT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&soft_off     	&kp F7        	&kp F8        	&kp F9        	&kp F10       	&kp F11       	&kp F12       	&trans        	&trans        	&bootloader   	&trans        	&bt BT_CLR    
&trans        	&kp F4        	&kp F5        	&kp F6        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        
&trans        	&kp F1        	&kp F2        	&kp F3        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        	&trans        
&trans        	&trans        	&trans        	&trans        	&trans        	&trans        			&trans        	&bt BT(0)     	&bt BT(1)     	&bt BT(2)     	&bt BT(3)     
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&trans        	&kp N7        	&kp N8        	&kp N9        	&trans        	&trans        	&trans        	&trans        	&kp UNDER     	&kp PLUS      	&trans        	&kp DEL       
&kp GRAVE     	&kp N4        	&kp N5        	&kp N6        	&trans        	&trans        	&trans        	&trans        	&kp LPAR      	&kp RPAR      	&kp COLON      	&trans        
&trans        	&kp N1        	&kp N2        	&kp N3        	&trans        	&trans        	&trans        	&trans        	&kp LBRC      	&kp RBRC      	&kp PIPE      	&trans        
&trans        	&trans        	&kp N0        	&trans        	&trans        	&trans        			&trans        	&kp HOME     	&kp PG_DN   	&kp PG_UP   	&kp END     
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&trans        	&kp AMPS      	&kp STAR      	&mcr_deg	&trans        	&trans        	&trans        	&trans        	&kp MINUS     	&kp EQUAL     	&trans        	&kp DEL       
&kp TILDE     	&kp DLLR      	&kp PRCNT     	&kp CARET       &trans        	&trans        	&trans        	&trans        	&kp LPAR      	&kp RPAR      	&kp SEMI       	&trans        
&trans        	&kp EXCL      	&kp AT        	&kp HASH        &trans        	&trans        	&trans        	&trans        	&kp LBKT      	&kp RBKT      	&kp BSLH      	&trans    
&trans        	&trans        	&trans        	&trans          &trans        	&trans        	            	&trans        	&kp C_MUTE    	&kp C_VOL_DN  	&kp C_VOL_UP  	&trans     
            >;
        };


    };
};
